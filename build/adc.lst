ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_ADC1_Init:
  26              	.LFB126:
  27              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   ** This notice applies to any and all portions of this file
   8:Src/adc.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/adc.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/adc.c     ****   * inserted by the user or by software development tools
  11:Src/adc.c     ****   * are owned by their respective copyright owners.
  12:Src/adc.c     ****   *
  13:Src/adc.c     ****   * COPYRIGHT(c) 2021 STMicroelectronics
  14:Src/adc.c     ****   *
  15:Src/adc.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/adc.c     ****   * are permitted provided that the following conditions are met:
  17:Src/adc.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/adc.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/adc.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/adc.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/adc.c     ****   *      and/or other materials provided with the distribution.
  22:Src/adc.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/adc.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/adc.c     ****   *      without specific prior written permission.
  25:Src/adc.c     ****   *
  26:Src/adc.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/adc.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/adc.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/adc.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/adc.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/adc.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 2


  32:Src/adc.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/adc.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/adc.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/adc.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/adc.c     ****   *
  37:Src/adc.c     ****   ******************************************************************************
  38:Src/adc.c     ****   */
  39:Src/adc.c     **** 
  40:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/adc.c     **** #include "adc.h"
  42:Src/adc.c     **** 
  43:Src/adc.c     **** #include "gpio.h"
  44:Src/adc.c     **** 
  45:Src/adc.c     **** /* USER CODE BEGIN 0 */
  46:Src/adc.c     **** #include "variable.h"
  47:Src/adc.c     **** 
  48:Src/adc.c     **** #define OFF_VALUE 0
  49:Src/adc.c     **** #define SIDE_VALUE 1
  50:Src/adc.c     **** #define FRONT_VALUE 2
  51:Src/adc.c     **** #define FINISH_CONVERT 3
  52:Src/adc.c     **** 
  53:Src/adc.c     **** #define ADC_CONVERT_DATA_SIZE 8
  54:Src/adc.c     **** 
  55:Src/adc.c     **** extern uint16_t ADCBuff[ADC_CONVERT_DATA_SIZE];     // ADÂ§âÊèõ„ÅÆÁµêÊûú„Çí‰øùÊåÅ„Åô„Çã„Éê„ÉÉ„Éï„Ç°
  56:Src/adc.c     **** extern uint16_t ADCOffData[ADC_CONVERT_DATA_SIZE];   // ADÂ§âÊèõ„ÅÆÊ∂à„Åó„ÅüÊôÇ„ÅÆÂÄ§„Çí‰øùÊåÅ
  57:Src/adc.c     **** extern uint16_t ADCOntData[ADC_CONVERT_DATA_SIZE];   // ADÂ§âÊèõ„ÅÆÂÖâ„Å£„Å¶??øΩ?øΩ?„Çã„Å®„ÅçÔøΩ???
  58:Src/adc.c     **** extern int16_t adc_counter;                          // ADÂ§âÊèõ„ÅÆ„Çø„Ç§„Éü„É≥„Ç∞„ÇíÊåá??øΩ?øΩ?
  59:Src/adc.c     **** 
  60:Src/adc.c     **** static uint8_t ctr_irled = 0;
  61:Src/adc.c     **** /* USER CODE END 0 */
  62:Src/adc.c     **** 
  63:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  64:Src/adc.c     **** 
  65:Src/adc.c     **** /* ADC1 init function */
  66:Src/adc.c     **** void MX_ADC1_Init(void)
  67:Src/adc.c     **** {
  28              		.loc 1 67 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  68:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig;
  69:Src/adc.c     **** 
  70:Src/adc.c     ****     /**Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of co
  71:Src/adc.c     ****     */
  72:Src/adc.c     ****   hadc1.Instance = ADC1;
  39              		.loc 1 72 0
  40 0004 1648     		ldr	r0, .L7
  41 0006 174B     		ldr	r3, .L7+4
  42 0008 0360     		str	r3, [r0]
  73:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 3


  43              		.loc 1 73 0
  44 000a 4FF48033 		mov	r3, #65536
  45 000e 4360     		str	r3, [r0, #4]
  74:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  46              		.loc 1 74 0
  47 0010 0023     		movs	r3, #0
  48 0012 8360     		str	r3, [r0, #8]
  75:Src/adc.c     ****   hadc1.Init.ScanConvMode = DISABLE;
  49              		.loc 1 75 0
  50 0014 0361     		str	r3, [r0, #16]
  76:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  51              		.loc 1 76 0
  52 0016 8361     		str	r3, [r0, #24]
  77:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  53              		.loc 1 77 0
  54 0018 0362     		str	r3, [r0, #32]
  78:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  55              		.loc 1 78 0
  56 001a C362     		str	r3, [r0, #44]
  79:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  57              		.loc 1 79 0
  58 001c 124A     		ldr	r2, .L7+8
  59 001e 8262     		str	r2, [r0, #40]
  80:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  60              		.loc 1 80 0
  61 0020 C360     		str	r3, [r0, #12]
  81:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 1;
  62              		.loc 1 81 0
  63 0022 0122     		movs	r2, #1
  64 0024 C261     		str	r2, [r0, #28]
  82:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
  65              		.loc 1 82 0
  66 0026 0363     		str	r3, [r0, #48]
  83:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  67              		.loc 1 83 0
  68 0028 4261     		str	r2, [r0, #20]
  84:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  69              		.loc 1 84 0
  70 002a FFF7FEFF 		bl	HAL_ADC_Init
  71              	.LVL0:
  72 002e 68B9     		cbnz	r0, .L5
  73              	.L2:
  85:Src/adc.c     ****   {
  86:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  87:Src/adc.c     ****   }
  88:Src/adc.c     **** 
  89:Src/adc.c     ****     /**Configure for the selected ADC regular channel its corresponding rank in the sequencer and i
  90:Src/adc.c     ****     */
  91:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_9;
  74              		.loc 1 91 0
  75 0030 0923     		movs	r3, #9
  76 0032 0093     		str	r3, [sp]
  92:Src/adc.c     ****   sConfig.Rank = 1;
  77              		.loc 1 92 0
  78 0034 0123     		movs	r3, #1
  79 0036 0193     		str	r3, [sp, #4]
  93:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 4


  80              		.loc 1 93 0
  81 0038 0023     		movs	r3, #0
  82 003a 0293     		str	r3, [sp, #8]
  94:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
  83              		.loc 1 94 0
  84 003c 6946     		mov	r1, sp
  85 003e 0848     		ldr	r0, .L7
  86 0040 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
  87              	.LVL1:
  88 0044 38B9     		cbnz	r0, .L6
  89              	.L1:
  95:Src/adc.c     ****   {
  96:Src/adc.c     ****     _Error_Handler(__FILE__, __LINE__);
  97:Src/adc.c     ****   }
  98:Src/adc.c     **** 
  99:Src/adc.c     **** }
  90              		.loc 1 99 0
  91 0046 05B0     		add	sp, sp, #20
  92              	.LCFI2:
  93              		.cfi_remember_state
  94              		.cfi_def_cfa_offset 4
  95              		@ sp needed
  96 0048 5DF804FB 		ldr	pc, [sp], #4
  97              	.L5:
  98              	.LCFI3:
  99              		.cfi_restore_state
  86:Src/adc.c     ****   }
 100              		.loc 1 86 0
 101 004c 5621     		movs	r1, #86
 102 004e 0748     		ldr	r0, .L7+12
 103 0050 FFF7FEFF 		bl	_Error_Handler
 104              	.LVL2:
 105 0054 ECE7     		b	.L2
 106              	.L6:
  96:Src/adc.c     ****   }
 107              		.loc 1 96 0
 108 0056 6021     		movs	r1, #96
 109 0058 0448     		ldr	r0, .L7+12
 110 005a FFF7FEFF 		bl	_Error_Handler
 111              	.LVL3:
 112              		.loc 1 99 0
 113 005e F2E7     		b	.L1
 114              	.L8:
 115              		.align	2
 116              	.L7:
 117 0060 00000000 		.word	hadc1
 118 0064 00200140 		.word	1073815552
 119 0068 0100000F 		.word	251658241
 120 006c 00000000 		.word	.LC0
 121              		.cfi_endproc
 122              	.LFE126:
 124              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 125              		.align	1
 126              		.global	HAL_ADC_MspInit
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 5


 130              		.fpu fpv4-sp-d16
 132              	HAL_ADC_MspInit:
 133              	.LFB127:
 100:Src/adc.c     **** 
 101:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
 102:Src/adc.c     **** {
 134              		.loc 1 102 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 24
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL4:
 103:Src/adc.c     **** 
 104:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 105:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 139              		.loc 1 105 0
 140 0000 0268     		ldr	r2, [r0]
 141 0002 0F4B     		ldr	r3, .L16
 142 0004 9A42     		cmp	r2, r3
 143 0006 00D0     		beq	.L15
 144 0008 7047     		bx	lr
 145              	.L15:
 102:Src/adc.c     **** 
 146              		.loc 1 102 0
 147 000a 00B5     		push	{lr}
 148              	.LCFI4:
 149              		.cfi_def_cfa_offset 4
 150              		.cfi_offset 14, -4
 151 000c 87B0     		sub	sp, sp, #28
 152              	.LCFI5:
 153              		.cfi_def_cfa_offset 32
 154              	.LBB2:
 106:Src/adc.c     ****   {
 107:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
 108:Src/adc.c     **** 
 109:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 110:Src/adc.c     ****     /* ADC1 clock enable */
 111:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_ENABLE();
 155              		.loc 1 111 0
 156 000e 0021     		movs	r1, #0
 157 0010 0091     		str	r1, [sp]
 158 0012 03F58C33 		add	r3, r3, #71680
 159 0016 5A6C     		ldr	r2, [r3, #68]
 160 0018 42F48072 		orr	r2, r2, #256
 161 001c 5A64     		str	r2, [r3, #68]
 162 001e 5B6C     		ldr	r3, [r3, #68]
 163 0020 03F48073 		and	r3, r3, #256
 164 0024 0093     		str	r3, [sp]
 165 0026 009B     		ldr	r3, [sp]
 166              	.LBE2:
 112:Src/adc.c     ****   
 113:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 114:Src/adc.c     ****     PB1     ------> ADC1_IN9 
 115:Src/adc.c     ****     */
 116:Src/adc.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_1;
 167              		.loc 1 116 0
 168 0028 0223     		movs	r3, #2
 169 002a 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 6


 117:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 170              		.loc 1 117 0
 171 002c 0323     		movs	r3, #3
 172 002e 0293     		str	r3, [sp, #8]
 118:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 173              		.loc 1 118 0
 174 0030 0391     		str	r1, [sp, #12]
 119:Src/adc.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 175              		.loc 1 119 0
 176 0032 01A9     		add	r1, sp, #4
 177 0034 0348     		ldr	r0, .L16+4
 178              	.LVL5:
 179 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL6:
 120:Src/adc.c     **** 
 121:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 122:Src/adc.c     **** 
 123:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 124:Src/adc.c     ****   }
 125:Src/adc.c     **** }
 181              		.loc 1 125 0
 182 003a 07B0     		add	sp, sp, #28
 183              	.LCFI6:
 184              		.cfi_def_cfa_offset 4
 185              		@ sp needed
 186 003c 5DF804FB 		ldr	pc, [sp], #4
 187              	.L17:
 188              		.align	2
 189              	.L16:
 190 0040 00200140 		.word	1073815552
 191 0044 00040240 		.word	1073873920
 192              		.cfi_endproc
 193              	.LFE127:
 195              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 196              		.align	1
 197              		.global	HAL_ADC_MspDeInit
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 201              		.fpu fpv4-sp-d16
 203              	HAL_ADC_MspDeInit:
 204              	.LFB128:
 126:Src/adc.c     **** 
 127:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 128:Src/adc.c     **** {
 205              		.loc 1 128 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              	.LVL7:
 210 0000 08B5     		push	{r3, lr}
 211              	.LCFI7:
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 3, -8
 214              		.cfi_offset 14, -4
 129:Src/adc.c     **** 
 130:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 7


 215              		.loc 1 130 0
 216 0002 0268     		ldr	r2, [r0]
 217 0004 064B     		ldr	r3, .L22
 218 0006 9A42     		cmp	r2, r3
 219 0008 00D0     		beq	.L21
 220              	.LVL8:
 221              	.L18:
 131:Src/adc.c     ****   {
 132:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 133:Src/adc.c     **** 
 134:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 135:Src/adc.c     ****     /* Peripheral clock disable */
 136:Src/adc.c     ****     __HAL_RCC_ADC1_CLK_DISABLE();
 137:Src/adc.c     ****   
 138:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 139:Src/adc.c     ****     PB1     ------> ADC1_IN9 
 140:Src/adc.c     ****     */
 141:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_1);
 142:Src/adc.c     **** 
 143:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 144:Src/adc.c     **** 
 145:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 146:Src/adc.c     ****   }
 147:Src/adc.c     **** } 
 222              		.loc 1 147 0
 223 000a 08BD     		pop	{r3, pc}
 224              	.LVL9:
 225              	.L21:
 136:Src/adc.c     ****   
 226              		.loc 1 136 0
 227 000c 054A     		ldr	r2, .L22+4
 228 000e 536C     		ldr	r3, [r2, #68]
 229 0010 23F48073 		bic	r3, r3, #256
 230 0014 5364     		str	r3, [r2, #68]
 141:Src/adc.c     **** 
 231              		.loc 1 141 0
 232 0016 0221     		movs	r1, #2
 233 0018 0348     		ldr	r0, .L22+8
 234              	.LVL10:
 235 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 236              	.LVL11:
 237              		.loc 1 147 0
 238 001e F4E7     		b	.L18
 239              	.L23:
 240              		.align	2
 241              	.L22:
 242 0020 00200140 		.word	1073815552
 243 0024 00380240 		.word	1073887232
 244 0028 00040240 		.word	1073873920
 245              		.cfi_endproc
 246              	.LFE128:
 248              		.section	.text.battMonitor,"ax",%progbits
 249              		.align	1
 250              		.global	battMonitor
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 8


 254              		.fpu fpv4-sp-d16
 256              	battMonitor:
 257              	.LFB129:
 148:Src/adc.c     **** 
 149:Src/adc.c     **** /* USER CODE BEGIN 1 */
 150:Src/adc.c     **** ///////////////////////////////////////////////////////////////////////
 151:Src/adc.c     **** // batt voltage calculation
 152:Src/adc.c     **** // [argument] nothinh
 153:Src/adc.c     **** // [Substitutiong] batt_voltage
 154:Src/adc.c     **** // [return] nothing
 155:Src/adc.c     **** ///////////////////////////////////////////////////////////////////////
 156:Src/adc.c     **** float battMonitor( void )
 157:Src/adc.c     **** {
 258              		.loc 1 157 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262 0000 38B5     		push	{r3, r4, r5, lr}
 263              	.LCFI8:
 264              		.cfi_def_cfa_offset 16
 265              		.cfi_offset 3, -16
 266              		.cfi_offset 4, -12
 267              		.cfi_offset 5, -8
 268              		.cfi_offset 14, -4
 269              	.LVL12:
 158:Src/adc.c     ****   int16_t batt_analog = 0;
 159:Src/adc.c     ****   float batt_voltage;
 160:Src/adc.c     **** 
 161:Src/adc.c     ****   HAL_ADC_Start( &hadc1 );
 270              		.loc 1 161 0
 271 0002 0F4C     		ldr	r4, .L26
 272 0004 2046     		mov	r0, r4
 273 0006 FFF7FEFF 		bl	HAL_ADC_Start
 274              	.LVL13:
 162:Src/adc.c     ****   HAL_ADC_PollForConversion( &hadc1,100 );  // trans
 275              		.loc 1 162 0
 276 000a 6421     		movs	r1, #100
 277 000c 2046     		mov	r0, r4
 278 000e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 279              	.LVL14:
 163:Src/adc.c     ****   batt_analog = HAL_ADC_GetValue( &hadc1 );   // get value
 280              		.loc 1 163 0
 281 0012 2046     		mov	r0, r4
 282 0014 FFF7FEFF 		bl	HAL_ADC_GetValue
 283              	.LVL15:
 284 0018 05B2     		sxth	r5, r0
 285              	.LVL16:
 164:Src/adc.c     ****   HAL_ADC_Stop( &hadc1 );
 286              		.loc 1 164 0
 287 001a 2046     		mov	r0, r4
 288 001c FFF7FEFF 		bl	HAL_ADC_Stop
 289              	.LVL17:
 165:Src/adc.c     ****   
 166:Src/adc.c     ****   batt_voltage = (float)( batt_analog / 4095.0f * 2.0f * 3.3f );
 290              		.loc 1 166 0
 291 0020 07EE905A 		vmov	s15, r5	@ int
 292 0024 F8EEE77A 		vcvt.f32.s32	s15, s15
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 9


 293 0028 9FED067A 		vldr.32	s14, .L26+4
 294 002c 87EE870A 		vdiv.f32	s0, s15, s14
 295 0030 30EE000A 		vadd.f32	s0, s0, s0
 296              	.LVL18:
 167:Src/adc.c     **** 
 168:Src/adc.c     ****   return batt_voltage;
 169:Src/adc.c     **** }
 297              		.loc 1 169 0
 298 0034 DFED047A 		vldr.32	s15, .L26+8
 299 0038 20EE270A 		vmul.f32	s0, s0, s15
 300              	.LVL19:
 301 003c 38BD     		pop	{r3, r4, r5, pc}
 302              	.LVL20:
 303              	.L27:
 304 003e 00BF     		.align	2
 305              	.L26:
 306 0040 00000000 		.word	hadc1
 307 0044 00F07F45 		.word	1166012416
 308 0048 33335340 		.word	1079194419
 309              		.cfi_endproc
 310              	.LFE129:
 312              		.global	__aeabi_f2d
 313              		.section	.text.battChecker,"ax",%progbits
 314              		.align	1
 315              		.global	battChecker
 316              		.syntax unified
 317              		.thumb
 318              		.thumb_func
 319              		.fpu fpv4-sp-d16
 321              	battChecker:
 322              	.LFB130:
 170:Src/adc.c     **** 
 171:Src/adc.c     **** void battChecker(void){
 323              		.loc 1 171 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327 0000 10B5     		push	{r4, lr}
 328              	.LCFI9:
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 4, -8
 331              		.cfi_offset 14, -4
 332 0002 2DED028B 		vpush.64	{d8}
 333              	.LCFI10:
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 80, -16
 336              		.cfi_offset 81, -12
 337              	.LVL21:
 338              	.LBB3:
 172:Src/adc.c     ****   float batt=0;
 173:Src/adc.c     ****   for(int i=0;i<10;i++){
 339              		.loc 1 173 0
 340 0006 0024     		movs	r4, #0
 341              	.LBE3:
 172:Src/adc.c     ****   float batt=0;
 342              		.loc 1 172 0
 343 0008 9FED178A 		vldr.32	s16, .L36
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 10


 344              	.LBB4:
 345              		.loc 1 173 0
 346 000c 04E0     		b	.L29
 347              	.LVL22:
 348              	.L30:
 174:Src/adc.c     ****     batt+=battMonitor();
 349              		.loc 1 174 0 discriminator 3
 350 000e FFF7FEFF 		bl	battMonitor
 351              	.LVL23:
 352 0012 38EE008A 		vadd.f32	s16, s16, s0
 353              	.LVL24:
 173:Src/adc.c     ****     batt+=battMonitor();
 354              		.loc 1 173 0 discriminator 3
 355 0016 0134     		adds	r4, r4, #1
 356              	.LVL25:
 357              	.L29:
 173:Src/adc.c     ****     batt+=battMonitor();
 358              		.loc 1 173 0 is_stmt 0 discriminator 1
 359 0018 092C     		cmp	r4, #9
 360 001a F8DD     		ble	.L30
 361              	.LBE4:
 175:Src/adc.c     ****   }
 176:Src/adc.c     ****   batt/=10.0f;
 362              		.loc 1 176 0 is_stmt 1
 363 001c F2EE047A 		vmov.f32	s15, #1.0e+1
 364 0020 C8EE278A 		vdiv.f32	s17, s16, s15
 365              	.LVL26:
 177:Src/adc.c     ****   printf("batt_voltage:%f\r\n",batt);
 366              		.loc 1 177 0
 367 0024 18EE900A 		vmov	r0, s17
 368 0028 FFF7FEFF 		bl	__aeabi_f2d
 369              	.LVL27:
 370 002c 0246     		mov	r2, r0
 371 002e 0B46     		mov	r3, r1
 372 0030 0E48     		ldr	r0, .L36+4
 373 0032 FFF7FEFF 		bl	printf
 374              	.LVL28:
 178:Src/adc.c     ****   if(batt < 3.6f){
 375              		.loc 1 178 0
 376 0036 DFED0E7A 		vldr.32	s15, .L36+8
 377 003a F4EEE78A 		vcmpe.f32	s17, s15
 378 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 379 0042 0ED5     		bpl	.L34
 380              	.L33:
 179:Src/adc.c     ****     while(1){
 180:Src/adc.c     ****       Led(15);
 381              		.loc 1 180 0 discriminator 1
 382 0044 0F20     		movs	r0, #15
 383 0046 FFF7FEFF 		bl	Led
 384              	.LVL29:
 181:Src/adc.c     ****       HAL_Delay(500);
 385              		.loc 1 181 0 discriminator 1
 386 004a 4FF4FA70 		mov	r0, #500
 387 004e FFF7FEFF 		bl	HAL_Delay
 388              	.LVL30:
 182:Src/adc.c     ****       Led(0);
 389              		.loc 1 182 0 discriminator 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 11


 390 0052 0020     		movs	r0, #0
 391 0054 FFF7FEFF 		bl	Led
 392              	.LVL31:
 183:Src/adc.c     ****       HAL_Delay(500);
 393              		.loc 1 183 0 discriminator 1
 394 0058 4FF4FA70 		mov	r0, #500
 395 005c FFF7FEFF 		bl	HAL_Delay
 396              	.LVL32:
 397 0060 F0E7     		b	.L33
 398              	.L34:
 184:Src/adc.c     ****     }
 185:Src/adc.c     ****   }
 186:Src/adc.c     **** }
 399              		.loc 1 186 0
 400 0062 BDEC028B 		vldm	sp!, {d8}
 401              	.LCFI11:
 402              		.cfi_restore 80
 403              		.cfi_restore 81
 404              		.cfi_def_cfa_offset 8
 405 0066 10BD     		pop	{r4, pc}
 406              	.LVL33:
 407              	.L37:
 408              		.align	2
 409              	.L36:
 410 0068 00000000 		.word	0
 411 006c 00000000 		.word	.LC1
 412 0070 66666640 		.word	1080452710
 413              		.cfi_endproc
 414              	.LFE130:
 416              		.section	.text.setIrledPwm,"ax",%progbits
 417              		.align	1
 418              		.global	setIrledPwm
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu fpv4-sp-d16
 424              	setIrledPwm:
 425              	.LFB131:
 187:Src/adc.c     **** 
 188:Src/adc.c     **** ///////////////////////////////////////////////////////////////////////
 189:Src/adc.c     **** // able ir led
 190:Src/adc.c     **** // [argument] ired 1:paluse emit ON 0:OFF
 191:Src/adc.c     **** // [Substitutiong] nothing
 192:Src/adc.c     **** // [return] nothing
 193:Src/adc.c     **** ///////////////////////////////////////////////////////////////////////
 194:Src/adc.c     **** void setIrledPwm( uint8_t able )
 195:Src/adc.c     **** {
 426              		.loc 1 195 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430              		@ link register save eliminated.
 431              	.LVL34:
 196:Src/adc.c     **** 	ctr_irled = able;
 432              		.loc 1 196 0
 433 0000 014B     		ldr	r3, .L39
 434 0002 1870     		strb	r0, [r3]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 12


 197:Src/adc.c     **** }
 435              		.loc 1 197 0
 436 0004 7047     		bx	lr
 437              	.L40:
 438 0006 00BF     		.align	2
 439              	.L39:
 440 0008 00000000 		.word	.LANCHOR0
 441              		.cfi_endproc
 442              	.LFE131:
 444              		.section	.text.setSensorConstant,"ax",%progbits
 445              		.align	1
 446              		.global	setSensorConstant
 447              		.syntax unified
 448              		.thumb
 449              		.thumb_func
 450              		.fpu fpv4-sp-d16
 452              	setSensorConstant:
 453              	.LFB132:
 198:Src/adc.c     **** 
 199:Src/adc.c     **** 
 200:Src/adc.c     **** void setSensorConstant( t_sensor *sen, int16_t reference, int16_t threshold )
 201:Src/adc.c     **** {
 454              		.loc 1 201 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459              	.LVL35:
 202:Src/adc.c     ****   sen->reference = reference;
 460              		.loc 1 202 0
 461 0000 4180     		strh	r1, [r0, #2]	@ movhi
 203:Src/adc.c     ****   sen->threshold = threshold;
 462              		.loc 1 203 0
 463 0002 8280     		strh	r2, [r0, #4]	@ movhi
 204:Src/adc.c     **** }
 464              		.loc 1 204 0
 465 0004 7047     		bx	lr
 466              		.cfi_endproc
 467              	.LFE132:
 469              		.section	.text.update_sensor_data,"ax",%progbits
 470              		.align	1
 471              		.global	update_sensor_data
 472              		.syntax unified
 473              		.thumb
 474              		.thumb_func
 475              		.fpu fpv4-sp-d16
 477              	update_sensor_data:
 478              	.LFB133:
 205:Src/adc.c     **** 
 206:Src/adc.c     **** void update_sensor_data( void )
 207:Src/adc.c     **** {
 479              		.loc 1 207 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              		@ link register save eliminated.
 484 0000 10B4     		push	{r4}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 13


 485              	.LCFI12:
 486              		.cfi_def_cfa_offset 4
 487              		.cfi_offset 4, -4
 208:Src/adc.c     **** 
 209:Src/adc.c     ****   sen_front.now = ( sen_fl.now + sen_fr.now ) / 2;
 488              		.loc 1 209 0
 489 0002 444B     		ldr	r3, .L63
 490 0004 B3F90030 		ldrsh	r3, [r3]
 491 0008 434C     		ldr	r4, .L63+4
 492 000a B4F90020 		ldrsh	r2, [r4]
 493 000e 1344     		add	r3, r3, r2
 494 0010 03EBD373 		add	r3, r3, r3, lsr #31
 495 0014 43F34F03 		sbfx	r3, r3, #1, #16
 496 0018 404A     		ldr	r2, .L63+8
 497 001a 1380     		strh	r3, [r2]	@ movhi
 210:Src/adc.c     **** 
 211:Src/adc.c     ****   sen_fr.diff = ( sen_fr_log.now - sen_fr_log.before_5ms );
 498              		.loc 1 211 0
 499 001c 4049     		ldr	r1, .L63+12
 500 001e 4A89     		ldrh	r2, [r1, #10]
 501 0020 0989     		ldrh	r1, [r1, #8]
 502 0022 511A     		subs	r1, r2, r1
 503 0024 89B2     		uxth	r1, r1
 504 0026 08B2     		sxth	r0, r1
 505 0028 E080     		strh	r0, [r4, #6]	@ movhi
 212:Src/adc.c     ****   if ( sen_fr.diff < 0 ) sen_fr.diff = -1 * sen_fr.diff;
 506              		.loc 1 212 0
 507 002a 0028     		cmp	r0, #0
 508 002c 54DB     		blt	.L56
 509              	.L43:
 213:Src/adc.c     ****   sen_fr.diff_1ms = ( sen_fr_log.now - sen_fr_log.before_1ms );
 510              		.loc 1 213 0
 511 002e 3C49     		ldr	r1, .L63+12
 512 0030 0988     		ldrh	r1, [r1]
 513 0032 521A     		subs	r2, r2, r1
 514 0034 92B2     		uxth	r2, r2
 515 0036 11B2     		sxth	r1, r2
 516 0038 3748     		ldr	r0, .L63+4
 517 003a 0181     		strh	r1, [r0, #8]	@ movhi
 214:Src/adc.c     ****   if ( sen_fr.diff_1ms < 0 ) sen_fr.diff_1ms = -1 * sen_fr.diff_1ms;
 518              		.loc 1 214 0
 519 003c 0029     		cmp	r1, #0
 520 003e 4EDB     		blt	.L57
 521              	.L44:
 215:Src/adc.c     **** 
 216:Src/adc.c     ****   sen_r.diff = ( sen_r_log.now - sen_r_log.before_5ms );
 522              		.loc 1 216 0
 523 0040 3849     		ldr	r1, .L63+16
 524 0042 4A89     		ldrh	r2, [r1, #10]
 525 0044 0889     		ldrh	r0, [r1, #8]
 526 0046 101A     		subs	r0, r2, r0
 527 0048 374C     		ldr	r4, .L63+20
 528 004a E080     		strh	r0, [r4, #6]	@ movhi
 217:Src/adc.c     ****   //if ( sen_r.diff < 0 ) sen_r.diff = -1 * sen_r.diff;
 218:Src/adc.c     ****   sen_r.diff_1ms = ( sen_r_log.now - sen_r_log.before_1ms );
 529              		.loc 1 218 0
 530 004c 0988     		ldrh	r1, [r1]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 14


 531 004e 521A     		subs	r2, r2, r1
 532 0050 92B2     		uxth	r2, r2
 533 0052 11B2     		sxth	r1, r2
 534 0054 2181     		strh	r1, [r4, #8]	@ movhi
 219:Src/adc.c     ****   if ( sen_r.diff_1ms < 0 ) sen_r.diff_1ms = -1 * sen_r.diff_1ms;
 535              		.loc 1 219 0
 536 0056 0029     		cmp	r1, #0
 537 0058 44DB     		blt	.L58
 538              	.L45:
 220:Src/adc.c     **** 
 221:Src/adc.c     ****   sen_l.diff = ( sen_l_log.now - sen_l_log.before_5ms );
 539              		.loc 1 221 0
 540 005a 3449     		ldr	r1, .L63+24
 541 005c 4A89     		ldrh	r2, [r1, #10]
 542 005e 0889     		ldrh	r0, [r1, #8]
 543 0060 101A     		subs	r0, r2, r0
 544 0062 334C     		ldr	r4, .L63+28
 545 0064 E080     		strh	r0, [r4, #6]	@ movhi
 222:Src/adc.c     ****  // if ( sen_l.diff < 0 ) sen_l.diff = -1 * sen_l.diff;
 223:Src/adc.c     ****   sen_l.diff_1ms = ( sen_l_log.now - sen_l_log.before_1ms );
 546              		.loc 1 223 0
 547 0066 0988     		ldrh	r1, [r1]
 548 0068 521A     		subs	r2, r2, r1
 549 006a 92B2     		uxth	r2, r2
 550 006c 11B2     		sxth	r1, r2
 551 006e 2181     		strh	r1, [r4, #8]	@ movhi
 224:Src/adc.c     ****   if ( sen_l.diff_1ms < 0 ) sen_l.diff_1ms = -1 * sen_l.diff_1ms;
 552              		.loc 1 224 0
 553 0070 0029     		cmp	r1, #0
 554 0072 3ADB     		blt	.L59
 555              	.L46:
 225:Src/adc.c     **** 
 226:Src/adc.c     ****   sen_fl.diff = ( sen_fl_log.now - sen_fl_log.before_5ms );
 556              		.loc 1 226 0
 557 0074 2F49     		ldr	r1, .L63+32
 558 0076 4A89     		ldrh	r2, [r1, #10]
 559 0078 0989     		ldrh	r1, [r1, #8]
 560 007a 511A     		subs	r1, r2, r1
 561 007c 89B2     		uxth	r1, r1
 562 007e 08B2     		sxth	r0, r1
 563 0080 244C     		ldr	r4, .L63
 564 0082 E080     		strh	r0, [r4, #6]	@ movhi
 227:Src/adc.c     ****   if ( sen_fl.diff < 0 ) sen_fl.diff = -1 * sen_fl.diff;
 565              		.loc 1 227 0
 566 0084 0028     		cmp	r0, #0
 567 0086 33DB     		blt	.L60
 568              	.L47:
 228:Src/adc.c     ****   sen_fl.diff_1ms = ( sen_fl_log.now - sen_fl_log.before_1ms );
 569              		.loc 1 228 0
 570 0088 2A49     		ldr	r1, .L63+32
 571 008a 0988     		ldrh	r1, [r1]
 572 008c 521A     		subs	r2, r2, r1
 573 008e 92B2     		uxth	r2, r2
 574 0090 11B2     		sxth	r1, r2
 575 0092 2048     		ldr	r0, .L63
 576 0094 0181     		strh	r1, [r0, #8]	@ movhi
 229:Src/adc.c     ****   if ( sen_fl.diff_1ms < 0 ) sen_fl.diff_1ms = -1 * sen_fl.diff_1ms;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 15


 577              		.loc 1 229 0
 578 0096 0029     		cmp	r1, #0
 579 0098 2DDB     		blt	.L61
 580              	.L48:
 230:Src/adc.c     **** 
 231:Src/adc.c     ****   if ( sen_front.now < sen_front.threshold ){
 581              		.loc 1 231 0
 582 009a 204A     		ldr	r2, .L63+8
 583 009c B2F90420 		ldrsh	r2, [r2, #4]
 584 00a0 9342     		cmp	r3, r2
 585 00a2 2BDA     		bge	.L49
 232:Src/adc.c     ****     sen_front.is_wall = 0;
 586              		.loc 1 232 0
 587 00a4 1D4B     		ldr	r3, .L63+8
 588 00a6 0022     		movs	r2, #0
 589 00a8 9A72     		strb	r2, [r3, #10]
 590              	.L50:
 233:Src/adc.c     ****   } else {
 234:Src/adc.c     ****     sen_front.is_wall = 1;
 235:Src/adc.c     ****   }
 236:Src/adc.c     **** 
 237:Src/adc.c     ****   if ( sen_l.now < sen_l.threshold ){
 591              		.loc 1 237 0
 592 00aa 214B     		ldr	r3, .L63+28
 593 00ac B3F90020 		ldrsh	r2, [r3]
 594 00b0 B3F90430 		ldrsh	r3, [r3, #4]
 595 00b4 9A42     		cmp	r2, r3
 596 00b6 25DA     		bge	.L51
 238:Src/adc.c     ****     sen_l.is_wall = 0;
 597              		.loc 1 238 0
 598 00b8 1D4B     		ldr	r3, .L63+28
 599 00ba 0022     		movs	r2, #0
 600 00bc 9A72     		strb	r2, [r3, #10]
 601              	.L52:
 239:Src/adc.c     ****   } else {
 240:Src/adc.c     ****     sen_l.is_wall = 1;
 241:Src/adc.c     ****   }
 242:Src/adc.c     **** 
 243:Src/adc.c     ****   if ( sen_r.now < sen_r.threshold ){
 602              		.loc 1 243 0
 603 00be 1A4B     		ldr	r3, .L63+20
 604 00c0 B3F90020 		ldrsh	r2, [r3]
 605 00c4 B3F90430 		ldrsh	r3, [r3, #4]
 606 00c8 9A42     		cmp	r2, r3
 607 00ca 1FDB     		blt	.L62
 244:Src/adc.c     ****     sen_r.is_wall = 0;
 245:Src/adc.c     ****   } else {
 246:Src/adc.c     ****     sen_r.is_wall = 1;
 608              		.loc 1 246 0
 609 00cc 164B     		ldr	r3, .L63+20
 610 00ce 0122     		movs	r2, #1
 611 00d0 9A72     		strb	r2, [r3, #10]
 612              	.L42:
 247:Src/adc.c     ****   }
 248:Src/adc.c     **** }
 613              		.loc 1 248 0
 614 00d2 5DF8044B 		ldr	r4, [sp], #4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 16


 615              	.LCFI13:
 616              		.cfi_remember_state
 617              		.cfi_restore 4
 618              		.cfi_def_cfa_offset 0
 619 00d6 7047     		bx	lr
 620              	.L56:
 621              	.LCFI14:
 622              		.cfi_restore_state
 212:Src/adc.c     ****   sen_fr.diff_1ms = ( sen_fr_log.now - sen_fr_log.before_1ms );
 623              		.loc 1 212 0 discriminator 1
 624 00d8 4942     		negs	r1, r1
 625 00da E180     		strh	r1, [r4, #6]	@ movhi
 626 00dc A7E7     		b	.L43
 627              	.L57:
 214:Src/adc.c     **** 
 628              		.loc 1 214 0 discriminator 1
 629 00de 5242     		negs	r2, r2
 630 00e0 0281     		strh	r2, [r0, #8]	@ movhi
 631 00e2 ADE7     		b	.L44
 632              	.L58:
 219:Src/adc.c     **** 
 633              		.loc 1 219 0 discriminator 1
 634 00e4 5242     		negs	r2, r2
 635 00e6 2281     		strh	r2, [r4, #8]	@ movhi
 636 00e8 B7E7     		b	.L45
 637              	.L59:
 224:Src/adc.c     **** 
 638              		.loc 1 224 0 discriminator 1
 639 00ea 5242     		negs	r2, r2
 640 00ec 2281     		strh	r2, [r4, #8]	@ movhi
 641 00ee C1E7     		b	.L46
 642              	.L60:
 227:Src/adc.c     ****   sen_fl.diff_1ms = ( sen_fl_log.now - sen_fl_log.before_1ms );
 643              		.loc 1 227 0 discriminator 1
 644 00f0 4942     		negs	r1, r1
 645 00f2 E180     		strh	r1, [r4, #6]	@ movhi
 646 00f4 C8E7     		b	.L47
 647              	.L61:
 229:Src/adc.c     **** 
 648              		.loc 1 229 0 discriminator 1
 649 00f6 5242     		negs	r2, r2
 650 00f8 0281     		strh	r2, [r0, #8]	@ movhi
 651 00fa CEE7     		b	.L48
 652              	.L49:
 234:Src/adc.c     ****   }
 653              		.loc 1 234 0
 654 00fc 074B     		ldr	r3, .L63+8
 655 00fe 0122     		movs	r2, #1
 656 0100 9A72     		strb	r2, [r3, #10]
 657 0102 D2E7     		b	.L50
 658              	.L51:
 240:Src/adc.c     ****   }
 659              		.loc 1 240 0
 660 0104 0A4B     		ldr	r3, .L63+28
 661 0106 0122     		movs	r2, #1
 662 0108 9A72     		strb	r2, [r3, #10]
 663 010a D8E7     		b	.L52
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 17


 664              	.L62:
 244:Src/adc.c     ****   } else {
 665              		.loc 1 244 0
 666 010c 064B     		ldr	r3, .L63+20
 667 010e 0022     		movs	r2, #0
 668 0110 9A72     		strb	r2, [r3, #10]
 669 0112 DEE7     		b	.L42
 670              	.L64:
 671              		.align	2
 672              	.L63:
 673 0114 00000000 		.word	sen_fl
 674 0118 00000000 		.word	sen_fr
 675 011c 00000000 		.word	sen_front
 676 0120 00000000 		.word	sen_fr_log
 677 0124 00000000 		.word	sen_r_log
 678 0128 00000000 		.word	sen_r
 679 012c 00000000 		.word	sen_l_log
 680 0130 00000000 		.word	sen_l
 681 0134 00000000 		.word	sen_fl_log
 682              		.cfi_endproc
 683              	.LFE133:
 685              		.section	.text.adcStart,"ax",%progbits
 686              		.align	1
 687              		.global	adcStart
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 691              		.fpu fpv4-sp-d16
 693              	adcStart:
 694              	.LFB134:
 249:Src/adc.c     **** 
 250:Src/adc.c     **** void adcStart( void )
 251:Src/adc.c     **** {
 695              		.loc 1 251 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699 0000 08B5     		push	{r3, lr}
 700              	.LCFI15:
 701              		.cfi_def_cfa_offset 8
 702              		.cfi_offset 3, -8
 703              		.cfi_offset 14, -4
 252:Src/adc.c     ****   setIrledPwm( IRLED_ON );
 704              		.loc 1 252 0
 705 0002 0120     		movs	r0, #1
 706 0004 FFF7FEFF 		bl	setIrledPwm
 707              	.LVL36:
 253:Src/adc.c     ****   adc_counter = 0;
 708              		.loc 1 253 0
 709 0008 044B     		ldr	r3, .L67
 710 000a 0022     		movs	r2, #0
 711 000c 1A80     		strh	r2, [r3]	@ movhi
 254:Src/adc.c     ****   HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 712              		.loc 1 254 0
 713 000e 1022     		movs	r2, #16
 714 0010 0349     		ldr	r1, .L67+4
 715 0012 0448     		ldr	r0, .L67+8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 18


 716 0014 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 717              	.LVL37:
 255:Src/adc.c     **** }
 718              		.loc 1 255 0
 719 0018 08BD     		pop	{r3, pc}
 720              	.L68:
 721 001a 00BF     		.align	2
 722              	.L67:
 723 001c 00000000 		.word	adc_counter
 724 0020 00000000 		.word	ADCBuff
 725 0024 00000000 		.word	hadc1
 726              		.cfi_endproc
 727              	.LFE134:
 729              		.section	.text.adcEnd,"ax",%progbits
 730              		.align	1
 731              		.global	adcEnd
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv4-sp-d16
 737              	adcEnd:
 738              	.LFB135:
 256:Src/adc.c     **** 
 257:Src/adc.c     **** void adcEnd( void )
 258:Src/adc.c     **** {
 739              		.loc 1 258 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743 0000 08B5     		push	{r3, lr}
 744              	.LCFI16:
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 3, -8
 747              		.cfi_offset 14, -4
 259:Src/adc.c     ****   setIrledPwm( IRLED_OFF );
 748              		.loc 1 259 0
 749 0002 0020     		movs	r0, #0
 750 0004 FFF7FEFF 		bl	setIrledPwm
 751              	.LVL38:
 260:Src/adc.c     ****   adc_counter = FINISH_CONVERT;
 752              		.loc 1 260 0
 753 0008 014B     		ldr	r3, .L71
 754 000a 0322     		movs	r2, #3
 755 000c 1A80     		strh	r2, [r3]	@ movhi
 261:Src/adc.c     **** }
 756              		.loc 1 261 0
 757 000e 08BD     		pop	{r3, pc}
 758              	.L72:
 759              		.align	2
 760              	.L71:
 761 0010 00000000 		.word	adc_counter
 762              		.cfi_endproc
 763              	.LFE135:
 765              		.section	.text.adcCheckConvert,"ax",%progbits
 766              		.align	1
 767              		.global	adcCheckConvert
 768              		.syntax unified
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 19


 769              		.thumb
 770              		.thumb_func
 771              		.fpu fpv4-sp-d16
 773              	adcCheckConvert:
 774              	.LFB136:
 262:Src/adc.c     **** 
 263:Src/adc.c     **** void adcCheckConvert( void )
 264:Src/adc.c     **** {
 775              		.loc 1 264 0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779 0000 08B5     		push	{r3, lr}
 780              	.LCFI17:
 781              		.cfi_def_cfa_offset 8
 782              		.cfi_offset 3, -8
 783              		.cfi_offset 14, -4
 265:Src/adc.c     ****   if ( adc_counter == FINISH_CONVERT ){
 784              		.loc 1 265 0
 785 0002 0C4B     		ldr	r3, .L77
 786 0004 B3F90030 		ldrsh	r3, [r3]
 787 0008 032B     		cmp	r3, #3
 788 000a 00D0     		beq	.L76
 789              	.L73:
 266:Src/adc.c     ****     batt_monitor = battMonitor();
 267:Src/adc.c     ****     if ( ctr_irled == 1 ){
 268:Src/adc.c     ****       adc_counter = 0;
 269:Src/adc.c     ****       HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 270:Src/adc.c     ****     }
 271:Src/adc.c     ****   }
 272:Src/adc.c     **** }
 790              		.loc 1 272 0
 791 000c 08BD     		pop	{r3, pc}
 792              	.L76:
 266:Src/adc.c     ****     batt_monitor = battMonitor();
 793              		.loc 1 266 0
 794 000e FFF7FEFF 		bl	battMonitor
 795              	.LVL39:
 796 0012 094B     		ldr	r3, .L77+4
 797 0014 83ED000A 		vstr.32	s0, [r3]
 267:Src/adc.c     ****       adc_counter = 0;
 798              		.loc 1 267 0
 799 0018 084B     		ldr	r3, .L77+8
 800 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 801 001c 012B     		cmp	r3, #1
 802 001e F5D1     		bne	.L73
 268:Src/adc.c     ****       HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 803              		.loc 1 268 0
 804 0020 044B     		ldr	r3, .L77
 805 0022 0022     		movs	r2, #0
 806 0024 1A80     		strh	r2, [r3]	@ movhi
 269:Src/adc.c     ****     }
 807              		.loc 1 269 0
 808 0026 1022     		movs	r2, #16
 809 0028 0549     		ldr	r1, .L77+12
 810 002a 0648     		ldr	r0, .L77+16
 811 002c FFF7FEFF 		bl	HAL_ADC_Start_DMA
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 20


 812              	.LVL40:
 813              		.loc 1 272 0
 814 0030 ECE7     		b	.L73
 815              	.L78:
 816 0032 00BF     		.align	2
 817              	.L77:
 818 0034 00000000 		.word	adc_counter
 819 0038 00000000 		.word	batt_monitor
 820 003c 00000000 		.word	.LANCHOR0
 821 0040 00000000 		.word	ADCBuff
 822 0044 00000000 		.word	hadc1
 823              		.cfi_endproc
 824              	.LFE136:
 826              		.section	.text.getADSensor,"ax",%progbits
 827              		.align	1
 828              		.global	getADSensor
 829              		.syntax unified
 830              		.thumb
 831              		.thumb_func
 832              		.fpu fpv4-sp-d16
 834              	getADSensor:
 835              	.LFB137:
 273:Src/adc.c     **** 
 274:Src/adc.c     **** // DMA „ÅÆÂ§âÊèõÂºè„ÇíË®òÔøΩ?
 275:Src/adc.c     **** void getADSensor( int16_t *adcount )
 276:Src/adc.c     **** {
 836              		.loc 1 276 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 8
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              	.LVL41:
 841 0000 70B5     		push	{r4, r5, r6, lr}
 842              	.LCFI18:
 843              		.cfi_def_cfa_offset 16
 844              		.cfi_offset 4, -16
 845              		.cfi_offset 5, -12
 846              		.cfi_offset 6, -8
 847              		.cfi_offset 14, -4
 848 0002 82B0     		sub	sp, sp, #8
 849              	.LCFI19:
 850              		.cfi_def_cfa_offset 24
 851 0004 0446     		mov	r4, r0
 277:Src/adc.c     ****   volatile int i;
 278:Src/adc.c     ****   switch( *adcount ) {
 852              		.loc 1 278 0
 853 0006 B0F90030 		ldrsh	r3, [r0]
 854 000a 012B     		cmp	r3, #1
 855 000c 28D0     		beq	.L81
 856 000e 022B     		cmp	r3, #2
 857 0010 7BD0     		beq	.L82
 858 0012 0BB1     		cbz	r3, .L89
 859              	.LVL42:
 860              	.L79:
 279:Src/adc.c     ****     case OFF_VALUE:
 280:Src/adc.c     ****       HAL_ADC_Stop_DMA( &hadc1 );
 281:Src/adc.c     ****       ADCOffData[0] = ADCBuff[0];
 282:Src/adc.c     ****       ADCOffData[1] = ADCBuff[1];
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 21


 283:Src/adc.c     ****       ADCOffData[2] = ADCBuff[2];
 284:Src/adc.c     ****       ADCOffData[3] = ADCBuff[3];
 285:Src/adc.c     **** 
 286:Src/adc.c     ****       HAL_GPIO_WritePin( ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_SET );
 287:Src/adc.c     ****       for( i = 0; i < 200; i++ ){
 288:Src/adc.c     **** 
 289:Src/adc.c     ****       }
 290:Src/adc.c     **** 
 291:Src/adc.c     ****       *adcount = SIDE_VALUE;
 292:Src/adc.c     **** 
 293:Src/adc.c     ****       HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 294:Src/adc.c     ****       break;
 295:Src/adc.c     **** 
 296:Src/adc.c     ****     case SIDE_VALUE:
 297:Src/adc.c     ****       HAL_GPIO_WritePin( ir_side_GPIO_Port, ir_side_Pin, GPIO_PIN_RESET );
 298:Src/adc.c     ****       HAL_ADC_Stop_DMA( &hadc1 );
 299:Src/adc.c     **** 
 300:Src/adc.c     ****       ADCOntData[2] = ADCBuff[2];
 301:Src/adc.c     ****       ADCOntData[3] = ADCBuff[3];
 302:Src/adc.c     **** 
 303:Src/adc.c     ****       sen_r.now = ADCOntData[2] - ADCOffData[2];
 304:Src/adc.c     ****       sen_r_log.before_5ms = sen_r_log.before_4ms;
 305:Src/adc.c     ****       sen_r_log.before_4ms = sen_r_log.before_3ms;
 306:Src/adc.c     ****       sen_r_log.before_3ms = sen_r_log.before_2ms;
 307:Src/adc.c     ****       sen_r_log.before_2ms = sen_r_log.before_1ms;
 308:Src/adc.c     ****       sen_r_log.before_1ms = sen_r_log.now;
 309:Src/adc.c     ****       sen_r_log.now = sen_r.now;
 310:Src/adc.c     **** 
 311:Src/adc.c     ****       sen_l.now = ADCOntData[3] - ADCOffData[3];
 312:Src/adc.c     ****       sen_l_log.before_5ms = sen_l_log.before_4ms;
 313:Src/adc.c     ****       sen_l_log.before_4ms = sen_l_log.before_3ms;
 314:Src/adc.c     ****       sen_l_log.before_3ms = sen_l_log.before_2ms;
 315:Src/adc.c     ****       sen_l_log.before_2ms = sen_l_log.before_1ms;
 316:Src/adc.c     ****       sen_l_log.before_1ms = sen_l_log.now;
 317:Src/adc.c     ****       sen_l_log.now = sen_l.now;
 318:Src/adc.c     **** 
 319:Src/adc.c     **** 
 320:Src/adc.c     ****       HAL_GPIO_WritePin( ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_SET );
 321:Src/adc.c     ****       for( i = 0; i < 400; i++ ){
 322:Src/adc.c     **** 
 323:Src/adc.c     ****       }
 324:Src/adc.c     **** 
 325:Src/adc.c     ****       *adcount = FRONT_VALUE;
 326:Src/adc.c     **** 
 327:Src/adc.c     ****       HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 328:Src/adc.c     ****       break;
 329:Src/adc.c     **** 
 330:Src/adc.c     ****     case FRONT_VALUE:
 331:Src/adc.c     ****       HAL_GPIO_WritePin( ir_front_GPIO_Port, ir_front_Pin, GPIO_PIN_RESET );
 332:Src/adc.c     ****       HAL_ADC_Stop_DMA( &hadc1 );
 333:Src/adc.c     **** 
 334:Src/adc.c     ****       ADCOntData[0] = ADCBuff[0];
 335:Src/adc.c     ****       ADCOntData[1] = ADCBuff[1];
 336:Src/adc.c     **** 
 337:Src/adc.c     ****       sen_fr.now = ADCOntData[0] - ADCOffData[0];
 338:Src/adc.c     ****       sen_fr_log.before_5ms = sen_fr_log.before_4ms;
 339:Src/adc.c     ****       sen_fr_log.before_4ms = sen_fr_log.before_3ms;
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 22


 340:Src/adc.c     ****       sen_fr_log.before_3ms = sen_fr_log.before_2ms;
 341:Src/adc.c     ****       sen_fr_log.before_2ms = sen_fr_log.before_1ms;
 342:Src/adc.c     ****       sen_fr_log.before_1ms = sen_fr_log.now;
 343:Src/adc.c     ****       sen_fr_log.now = sen_fr.now;
 344:Src/adc.c     **** 
 345:Src/adc.c     ****       sen_fl.now = ADCOntData[1] - ADCOffData[1];
 346:Src/adc.c     ****       sen_fl_log.before_5ms = sen_fl_log.before_4ms;
 347:Src/adc.c     ****       sen_fl_log.before_4ms = sen_fl_log.before_3ms;
 348:Src/adc.c     ****       sen_fl_log.before_3ms = sen_fl_log.before_2ms;
 349:Src/adc.c     ****       sen_fl_log.before_2ms = sen_fl_log.before_1ms;
 350:Src/adc.c     ****       sen_fl_log.before_1ms = sen_fl_log.now;
 351:Src/adc.c     ****       sen_fl_log.now = sen_fl.now;
 352:Src/adc.c     **** 
 353:Src/adc.c     ****       *adcount = FINISH_CONVERT;
 354:Src/adc.c     ****       update_sensor_data();
 355:Src/adc.c     ****       break;
 356:Src/adc.c     **** 
 357:Src/adc.c     ****     default:
 358:Src/adc.c     ****       break;
 359:Src/adc.c     ****   }
 360:Src/adc.c     **** }
 861              		.loc 1 360 0
 862 0014 02B0     		add	sp, sp, #8
 863              	.LCFI20:
 864              		.cfi_remember_state
 865              		.cfi_def_cfa_offset 16
 866              		@ sp needed
 867 0016 70BD     		pop	{r4, r5, r6, pc}
 868              	.LVL43:
 869              	.L89:
 870              	.LCFI21:
 871              		.cfi_restore_state
 280:Src/adc.c     ****       ADCOffData[0] = ADCBuff[0];
 872              		.loc 1 280 0
 873 0018 5C48     		ldr	r0, .L90
 874              	.LVL44:
 875 001a FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 876              	.LVL45:
 281:Src/adc.c     ****       ADCOffData[1] = ADCBuff[1];
 877              		.loc 1 281 0
 878 001e 5C4A     		ldr	r2, .L90+4
 879 0020 1188     		ldrh	r1, [r2]
 880 0022 5C4B     		ldr	r3, .L90+8
 881 0024 1980     		strh	r1, [r3]	@ movhi
 282:Src/adc.c     ****       ADCOffData[2] = ADCBuff[2];
 882              		.loc 1 282 0
 883 0026 5188     		ldrh	r1, [r2, #2]
 884 0028 5980     		strh	r1, [r3, #2]	@ movhi
 283:Src/adc.c     ****       ADCOffData[3] = ADCBuff[3];
 885              		.loc 1 283 0
 886 002a 9188     		ldrh	r1, [r2, #4]
 887 002c 9980     		strh	r1, [r3, #4]	@ movhi
 284:Src/adc.c     **** 
 888              		.loc 1 284 0
 889 002e D288     		ldrh	r2, [r2, #6]
 890 0030 DA80     		strh	r2, [r3, #6]	@ movhi
 286:Src/adc.c     ****       for( i = 0; i < 200; i++ ){
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 23


 891              		.loc 1 286 0
 892 0032 0122     		movs	r2, #1
 893 0034 4FF40041 		mov	r1, #32768
 894 0038 5748     		ldr	r0, .L90+12
 895 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 896              	.LVL46:
 287:Src/adc.c     **** 
 897              		.loc 1 287 0
 898 003e 0023     		movs	r3, #0
 899 0040 0193     		str	r3, [sp, #4]
 900 0042 02E0     		b	.L84
 901              	.L85:
 287:Src/adc.c     **** 
 902              		.loc 1 287 0 is_stmt 0 discriminator 3
 903 0044 019B     		ldr	r3, [sp, #4]
 904 0046 0133     		adds	r3, r3, #1
 905 0048 0193     		str	r3, [sp, #4]
 906              	.L84:
 287:Src/adc.c     **** 
 907              		.loc 1 287 0 discriminator 1
 908 004a 019B     		ldr	r3, [sp, #4]
 909 004c C72B     		cmp	r3, #199
 910 004e F9DD     		ble	.L85
 291:Src/adc.c     **** 
 911              		.loc 1 291 0 is_stmt 1
 912 0050 0123     		movs	r3, #1
 913 0052 2380     		strh	r3, [r4]	@ movhi
 293:Src/adc.c     ****       break;
 914              		.loc 1 293 0
 915 0054 1022     		movs	r2, #16
 916 0056 4E49     		ldr	r1, .L90+4
 917 0058 4C48     		ldr	r0, .L90
 918 005a FFF7FEFF 		bl	HAL_ADC_Start_DMA
 919              	.LVL47:
 294:Src/adc.c     **** 
 920              		.loc 1 294 0
 921 005e D9E7     		b	.L79
 922              	.LVL48:
 923              	.L81:
 297:Src/adc.c     ****       HAL_ADC_Stop_DMA( &hadc1 );
 924              		.loc 1 297 0
 925 0060 4D4D     		ldr	r5, .L90+12
 926 0062 0022     		movs	r2, #0
 927 0064 4FF40041 		mov	r1, #32768
 928 0068 2846     		mov	r0, r5
 929              	.LVL49:
 930 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 931              	.LVL50:
 298:Src/adc.c     **** 
 932              		.loc 1 298 0
 933 006e 4748     		ldr	r0, .L90
 934 0070 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 935              	.LVL51:
 300:Src/adc.c     ****       ADCOntData[3] = ADCBuff[3];
 936              		.loc 1 300 0
 937 0074 464A     		ldr	r2, .L90+4
 938 0076 9188     		ldrh	r1, [r2, #4]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 24


 939 0078 484B     		ldr	r3, .L90+16
 940 007a 9980     		strh	r1, [r3, #4]	@ movhi
 301:Src/adc.c     **** 
 941              		.loc 1 301 0
 942 007c D288     		ldrh	r2, [r2, #6]
 943 007e DA80     		strh	r2, [r3, #6]	@ movhi
 303:Src/adc.c     ****       sen_r_log.before_5ms = sen_r_log.before_4ms;
 944              		.loc 1 303 0
 945 0080 4448     		ldr	r0, .L90+8
 946 0082 8388     		ldrh	r3, [r0, #4]
 947 0084 C91A     		subs	r1, r1, r3
 948 0086 09B2     		sxth	r1, r1
 949 0088 454B     		ldr	r3, .L90+20
 950 008a 1980     		strh	r1, [r3]	@ movhi
 304:Src/adc.c     ****       sen_r_log.before_4ms = sen_r_log.before_3ms;
 951              		.loc 1 304 0
 952 008c 454B     		ldr	r3, .L90+24
 953 008e B3F90660 		ldrsh	r6, [r3, #6]
 954 0092 1E81     		strh	r6, [r3, #8]	@ movhi
 305:Src/adc.c     ****       sen_r_log.before_3ms = sen_r_log.before_2ms;
 955              		.loc 1 305 0
 956 0094 B3F90460 		ldrsh	r6, [r3, #4]
 957 0098 DE80     		strh	r6, [r3, #6]	@ movhi
 306:Src/adc.c     ****       sen_r_log.before_2ms = sen_r_log.before_1ms;
 958              		.loc 1 306 0
 959 009a B3F90260 		ldrsh	r6, [r3, #2]
 960 009e 9E80     		strh	r6, [r3, #4]	@ movhi
 307:Src/adc.c     ****       sen_r_log.before_1ms = sen_r_log.now;
 961              		.loc 1 307 0
 962 00a0 B3F90060 		ldrsh	r6, [r3]
 963 00a4 5E80     		strh	r6, [r3, #2]	@ movhi
 308:Src/adc.c     ****       sen_r_log.now = sen_r.now;
 964              		.loc 1 308 0
 965 00a6 B3F90A60 		ldrsh	r6, [r3, #10]
 966 00aa 1E80     		strh	r6, [r3]	@ movhi
 309:Src/adc.c     **** 
 967              		.loc 1 309 0
 968 00ac 5981     		strh	r1, [r3, #10]	@ movhi
 311:Src/adc.c     ****       sen_l_log.before_5ms = sen_l_log.before_4ms;
 969              		.loc 1 311 0
 970 00ae C388     		ldrh	r3, [r0, #6]
 971 00b0 D21A     		subs	r2, r2, r3
 972 00b2 12B2     		sxth	r2, r2
 973 00b4 3C4B     		ldr	r3, .L90+28
 974 00b6 1A80     		strh	r2, [r3]	@ movhi
 312:Src/adc.c     ****       sen_l_log.before_4ms = sen_l_log.before_3ms;
 975              		.loc 1 312 0
 976 00b8 3C4B     		ldr	r3, .L90+32
 977 00ba B3F90610 		ldrsh	r1, [r3, #6]
 978 00be 1981     		strh	r1, [r3, #8]	@ movhi
 313:Src/adc.c     ****       sen_l_log.before_3ms = sen_l_log.before_2ms;
 979              		.loc 1 313 0
 980 00c0 B3F90410 		ldrsh	r1, [r3, #4]
 981 00c4 D980     		strh	r1, [r3, #6]	@ movhi
 314:Src/adc.c     ****       sen_l_log.before_2ms = sen_l_log.before_1ms;
 982              		.loc 1 314 0
 983 00c6 B3F90210 		ldrsh	r1, [r3, #2]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 25


 984 00ca 9980     		strh	r1, [r3, #4]	@ movhi
 315:Src/adc.c     ****       sen_l_log.before_1ms = sen_l_log.now;
 985              		.loc 1 315 0
 986 00cc B3F90010 		ldrsh	r1, [r3]
 987 00d0 5980     		strh	r1, [r3, #2]	@ movhi
 316:Src/adc.c     ****       sen_l_log.now = sen_l.now;
 988              		.loc 1 316 0
 989 00d2 B3F90A10 		ldrsh	r1, [r3, #10]
 990 00d6 1980     		strh	r1, [r3]	@ movhi
 317:Src/adc.c     **** 
 991              		.loc 1 317 0
 992 00d8 5A81     		strh	r2, [r3, #10]	@ movhi
 320:Src/adc.c     ****       for( i = 0; i < 400; i++ ){
 993              		.loc 1 320 0
 994 00da 0122     		movs	r2, #1
 995 00dc 4FF48041 		mov	r1, #16384
 996 00e0 2846     		mov	r0, r5
 997 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 998              	.LVL52:
 321:Src/adc.c     **** 
 999              		.loc 1 321 0
 1000 00e6 0023     		movs	r3, #0
 1001 00e8 0193     		str	r3, [sp, #4]
 1002 00ea 02E0     		b	.L86
 1003              	.L87:
 321:Src/adc.c     **** 
 1004              		.loc 1 321 0 is_stmt 0 discriminator 3
 1005 00ec 019B     		ldr	r3, [sp, #4]
 1006 00ee 0133     		adds	r3, r3, #1
 1007 00f0 0193     		str	r3, [sp, #4]
 1008              	.L86:
 321:Src/adc.c     **** 
 1009              		.loc 1 321 0 discriminator 1
 1010 00f2 019B     		ldr	r3, [sp, #4]
 1011 00f4 B3F5C87F 		cmp	r3, #400
 1012 00f8 F8DB     		blt	.L87
 325:Src/adc.c     **** 
 1013              		.loc 1 325 0 is_stmt 1
 1014 00fa 0223     		movs	r3, #2
 1015 00fc 2380     		strh	r3, [r4]	@ movhi
 327:Src/adc.c     ****       break;
 1016              		.loc 1 327 0
 1017 00fe 1022     		movs	r2, #16
 1018 0100 2349     		ldr	r1, .L90+4
 1019 0102 2248     		ldr	r0, .L90
 1020 0104 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1021              	.LVL53:
 328:Src/adc.c     **** 
 1022              		.loc 1 328 0
 1023 0108 84E7     		b	.L79
 1024              	.LVL54:
 1025              	.L82:
 331:Src/adc.c     ****       HAL_ADC_Stop_DMA( &hadc1 );
 1026              		.loc 1 331 0
 1027 010a 0022     		movs	r2, #0
 1028 010c 4FF48041 		mov	r1, #16384
 1029 0110 2148     		ldr	r0, .L90+12
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 26


 1030              	.LVL55:
 1031 0112 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1032              	.LVL56:
 332:Src/adc.c     **** 
 1033              		.loc 1 332 0
 1034 0116 1D48     		ldr	r0, .L90
 1035 0118 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 1036              	.LVL57:
 334:Src/adc.c     ****       ADCOntData[1] = ADCBuff[1];
 1037              		.loc 1 334 0
 1038 011c 1C4A     		ldr	r2, .L90+4
 1039 011e 1188     		ldrh	r1, [r2]
 1040 0120 1E4B     		ldr	r3, .L90+16
 1041 0122 1980     		strh	r1, [r3]	@ movhi
 335:Src/adc.c     **** 
 1042              		.loc 1 335 0
 1043 0124 5288     		ldrh	r2, [r2, #2]
 1044 0126 5A80     		strh	r2, [r3, #2]	@ movhi
 337:Src/adc.c     ****       sen_fr_log.before_5ms = sen_fr_log.before_4ms;
 1045              		.loc 1 337 0
 1046 0128 1A48     		ldr	r0, .L90+8
 1047 012a 0388     		ldrh	r3, [r0]
 1048 012c C91A     		subs	r1, r1, r3
 1049 012e 09B2     		sxth	r1, r1
 1050 0130 1F4B     		ldr	r3, .L90+36
 1051 0132 1980     		strh	r1, [r3]	@ movhi
 338:Src/adc.c     ****       sen_fr_log.before_4ms = sen_fr_log.before_3ms;
 1052              		.loc 1 338 0
 1053 0134 1F4B     		ldr	r3, .L90+40
 1054 0136 B3F90650 		ldrsh	r5, [r3, #6]
 1055 013a 1D81     		strh	r5, [r3, #8]	@ movhi
 339:Src/adc.c     ****       sen_fr_log.before_3ms = sen_fr_log.before_2ms;
 1056              		.loc 1 339 0
 1057 013c B3F90450 		ldrsh	r5, [r3, #4]
 1058 0140 DD80     		strh	r5, [r3, #6]	@ movhi
 340:Src/adc.c     ****       sen_fr_log.before_2ms = sen_fr_log.before_1ms;
 1059              		.loc 1 340 0
 1060 0142 B3F90250 		ldrsh	r5, [r3, #2]
 1061 0146 9D80     		strh	r5, [r3, #4]	@ movhi
 341:Src/adc.c     ****       sen_fr_log.before_1ms = sen_fr_log.now;
 1062              		.loc 1 341 0
 1063 0148 B3F90050 		ldrsh	r5, [r3]
 1064 014c 5D80     		strh	r5, [r3, #2]	@ movhi
 342:Src/adc.c     ****       sen_fr_log.now = sen_fr.now;
 1065              		.loc 1 342 0
 1066 014e B3F90A50 		ldrsh	r5, [r3, #10]
 1067 0152 1D80     		strh	r5, [r3]	@ movhi
 343:Src/adc.c     **** 
 1068              		.loc 1 343 0
 1069 0154 5981     		strh	r1, [r3, #10]	@ movhi
 345:Src/adc.c     ****       sen_fl_log.before_5ms = sen_fl_log.before_4ms;
 1070              		.loc 1 345 0
 1071 0156 4388     		ldrh	r3, [r0, #2]
 1072 0158 D21A     		subs	r2, r2, r3
 1073 015a 12B2     		sxth	r2, r2
 1074 015c 164B     		ldr	r3, .L90+44
 1075 015e 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 27


 346:Src/adc.c     ****       sen_fl_log.before_4ms = sen_fl_log.before_3ms;
 1076              		.loc 1 346 0
 1077 0160 164B     		ldr	r3, .L90+48
 1078 0162 B3F90610 		ldrsh	r1, [r3, #6]
 1079 0166 1981     		strh	r1, [r3, #8]	@ movhi
 347:Src/adc.c     ****       sen_fl_log.before_3ms = sen_fl_log.before_2ms;
 1080              		.loc 1 347 0
 1081 0168 B3F90410 		ldrsh	r1, [r3, #4]
 1082 016c D980     		strh	r1, [r3, #6]	@ movhi
 348:Src/adc.c     ****       sen_fl_log.before_2ms = sen_fl_log.before_1ms;
 1083              		.loc 1 348 0
 1084 016e B3F90210 		ldrsh	r1, [r3, #2]
 1085 0172 9980     		strh	r1, [r3, #4]	@ movhi
 349:Src/adc.c     ****       sen_fl_log.before_1ms = sen_fl_log.now;
 1086              		.loc 1 349 0
 1087 0174 B3F90010 		ldrsh	r1, [r3]
 1088 0178 5980     		strh	r1, [r3, #2]	@ movhi
 350:Src/adc.c     ****       sen_fl_log.now = sen_fl.now;
 1089              		.loc 1 350 0
 1090 017a B3F90A10 		ldrsh	r1, [r3, #10]
 1091 017e 1980     		strh	r1, [r3]	@ movhi
 351:Src/adc.c     **** 
 1092              		.loc 1 351 0
 1093 0180 5A81     		strh	r2, [r3, #10]	@ movhi
 353:Src/adc.c     ****       update_sensor_data();
 1094              		.loc 1 353 0
 1095 0182 0323     		movs	r3, #3
 1096 0184 2380     		strh	r3, [r4]	@ movhi
 354:Src/adc.c     ****       break;
 1097              		.loc 1 354 0
 1098 0186 FFF7FEFF 		bl	update_sensor_data
 1099              	.LVL58:
 1100              		.loc 1 360 0
 1101 018a 43E7     		b	.L79
 1102              	.L91:
 1103              		.align	2
 1104              	.L90:
 1105 018c 00000000 		.word	hadc1
 1106 0190 00000000 		.word	ADCBuff
 1107 0194 00000000 		.word	ADCOffData
 1108 0198 00080240 		.word	1073874944
 1109 019c 00000000 		.word	ADCOntData
 1110 01a0 00000000 		.word	sen_r
 1111 01a4 00000000 		.word	sen_r_log
 1112 01a8 00000000 		.word	sen_l
 1113 01ac 00000000 		.word	sen_l_log
 1114 01b0 00000000 		.word	sen_fr
 1115 01b4 00000000 		.word	sen_fr_log
 1116 01b8 00000000 		.word	sen_fl
 1117 01bc 00000000 		.word	sen_fl_log
 1118              		.cfi_endproc
 1119              	.LFE137:
 1121              		.comm	hadc1,72,4
 1122              		.section	.bss.ctr_irled,"aw",%nobits
 1123              		.set	.LANCHOR0,. + 0
 1126              	ctr_irled:
 1127 0000 00       		.space	1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 28


 1128              		.section	.rodata.MX_ADC1_Init.str1.4,"aMS",%progbits,1
 1129              		.align	2
 1130              	.LC0:
 1131 0000 5372632F 		.ascii	"Src/adc.c\000"
 1131      6164632E 
 1131      6300
 1132              		.section	.rodata.battChecker.str1.4,"aMS",%progbits,1
 1133              		.align	2
 1134              	.LC1:
 1135 0000 62617474 		.ascii	"batt_voltage:%f\015\012\000"
 1135      5F766F6C 
 1135      74616765 
 1135      3A25660D 
 1135      0A00
 1136              		.text
 1137              	.Letext0:
 1138              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1139              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1140              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1141              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1142              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1143              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1144              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1145              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 1146              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1147              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1148              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1149              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1150              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1151              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1152              		.file 16 "Inc/adc.h"
 1153              		.file 17 "Inc/variable.h"
 1154              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1155              		.file 19 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1156              		.file 20 "Inc/gpio.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 adc.c
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:18     .text.MX_ADC1_Init:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:25     .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:117    .text.MX_ADC1_Init:00000060 $d
                            *COM*:00000048 hadc1
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:125    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:132    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:190    .text.HAL_ADC_MspInit:00000040 $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:196    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:203    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:242    .text.HAL_ADC_MspDeInit:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:249    .text.battMonitor:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:256    .text.battMonitor:00000000 battMonitor
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:306    .text.battMonitor:00000040 $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:314    .text.battChecker:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:321    .text.battChecker:00000000 battChecker
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:410    .text.battChecker:00000068 $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:417    .text.setIrledPwm:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:424    .text.setIrledPwm:00000000 setIrledPwm
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:440    .text.setIrledPwm:00000008 $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:445    .text.setSensorConstant:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:452    .text.setSensorConstant:00000000 setSensorConstant
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:470    .text.update_sensor_data:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:477    .text.update_sensor_data:00000000 update_sensor_data
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:673    .text.update_sensor_data:00000114 $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:686    .text.adcStart:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:693    .text.adcStart:00000000 adcStart
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:723    .text.adcStart:0000001c $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:730    .text.adcEnd:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:737    .text.adcEnd:00000000 adcEnd
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:761    .text.adcEnd:00000010 $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:766    .text.adcCheckConvert:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:773    .text.adcCheckConvert:00000000 adcCheckConvert
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:818    .text.adcCheckConvert:00000034 $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:827    .text.getADSensor:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:834    .text.getADSensor:00000000 getADSensor
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:1105   .text.getADSensor:0000018c $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:1126   .bss.ctr_irled:00000000 ctr_irled
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:1127   .bss.ctr_irled:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:1129   .rodata.MX_ADC1_Init.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s:1133   .rodata.battChecker.str1.4:00000000 $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADC_ConfigChannel
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_ADC_Stop
__aeabi_f2d
printf
Led
HAL_Delay
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccfnStC9.s 			page 30


sen_fl
sen_fr
sen_front
sen_fr_log
sen_r_log
sen_r
sen_l_log
sen_l
sen_fl_log
HAL_ADC_Start_DMA
adc_counter
ADCBuff
batt_monitor
HAL_ADC_Stop_DMA
HAL_GPIO_WritePin
ADCOffData
ADCOntData
